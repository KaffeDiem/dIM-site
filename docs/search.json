{"Structs/SupportView.html#/s:13bluetoothChat11SupportViewV12showingAlertSbvp":{"name":"showingAlert","abstract":"<p>A simple alert showing if the user has not set up a default email address in the","parent_name":"SupportView"},"Structs/SupportView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"SupportView"},"Structs/SettingsView.html#/s:13bluetoothChat12SettingsViewV8defaultsSo14NSUserDefaultsCvp":{"name":"defaults","abstract":"<p>The <code>UserDefaults</code> for getting information from persistent storage.</p>","parent_name":"SettingsView"},"Structs/SettingsView.html#/s:13bluetoothChat12SettingsViewV9chatBrainAA0bF0Cvp":{"name":"chatBrain","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChatBrain.html\">ChatBrain</a></code> to get things from the logic layer.</p>","parent_name":"SettingsView"},"Structs/SettingsView.html#/s:13bluetoothChat12SettingsViewV12usernameTempSSvp":{"name":"usernameTemp","abstract":"<p>Temporary storage for the new username textfield.</p>","parent_name":"SettingsView"},"Structs/SettingsView.html#/s:13bluetoothChat12SettingsViewV11colorScheme7SwiftUI05ColorF0Ovp":{"name":"colorScheme","abstract":"<p>Colorscheme for this device to show different images depending on dark or light mode.</p>","parent_name":"SettingsView"},"Structs/SettingsView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"SettingsView"},"Structs/SettingsView.html#/s:13bluetoothChat12SettingsViewV18checkValidUsername8usernameSbSS_tF":{"name":"checkValidUsername(username:)","abstract":"<p>Check if a username is valid. If it is not we are not allowed","parent_name":"SettingsView"},"Structs/ReadToggle.html#/s:13bluetoothChat10ReadToggleV8defaultsSo14NSUserDefaultsCvp":{"name":"defaults","abstract":"<p><code>UserDefaults</code> for persistent storage.</p>","parent_name":"ReadToggle"},"Structs/ReadToggle.html#/s:13bluetoothChat10ReadToggleV010readStatusD0Sbvp":{"name":"readStatusToggle","abstract":"<p>The read status toggle as a boolean saved to <code>UserDefaults</code></p>","parent_name":"ReadToggle"},"Structs/ReadToggle.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ReadToggle"},"Structs/ConnectivityView.html#/s:13bluetoothChat16ConnectivityViewV9chatBrainAA0bF0Cvp":{"name":"chatBrain","abstract":"<p>The ChatBrain object is used to get statistics and current connections.</p>","parent_name":"ConnectivityView"},"Structs/ConnectivityView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ConnectivityView"},"Structs/AboutView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"AboutView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV8usernameSSvp":{"name":"username","abstract":"<p>The <code>username</code> field stores the currently entered username from the user.</p>","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV11hasUsernameSbvp":{"name":"hasUsername","abstract":"<p>Checks if the user has set a username already. If yes we redirect to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HomeView.html\">HomeView</a></code> instantly.</p>","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV11colorScheme7SwiftUI05ColorG0Ovp":{"name":"colorScheme","abstract":"<p>The current colorscheme of the phone for displaying different visuals depending on light","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV7contextSo22NSManagedObjectContextCvp":{"name":"context","abstract":"<p>The CoreData context object which we save to persistent storage to.</p>","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV13conversations7SwiftUI14FetchedResultsVyAA18ConversationEntityCGvp":{"name":"conversations","abstract":"<p>Undocumented</p>","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV13checkUsername8usernameSbSS_tF":{"name":"checkUsername(username:)","abstract":"<p>Checks if a username is valid</p>","parent_name":"SetUpView"},"Structs/SetUpView.html#/s:13bluetoothChat9SetUpViewV16activateDemoModeyyF":{"name":"activateDemoMode()","abstract":"<p>Activate demo mode for Apple where a conversation is automatically added as an example.</p>","parent_name":"SetUpView"},"Structs/QRView.html#/s:13bluetoothChat6QRViewV11colorScheme7SwiftUI05ColorE0Ovp":{"name":"colorScheme","abstract":"<p>The colorscheme of the current users device. Used for displaying","parent_name":"QRView"},"Structs/QRView.html#/s:13bluetoothChat6QRViewV8usernameSSSgvp":{"name":"username","abstract":"<p>The username fetched from <code>UserDefaults</code></p>","parent_name":"QRView"},"Structs/QRView.html#/s:13bluetoothChat6QRViewV7contextSo9CIContextCvp":{"name":"context","abstract":"<p>Contect for drawing of the QR code.</p>","parent_name":"QRView"},"Structs/QRView.html#/s:13bluetoothChat6QRViewV6filterSo17CIQRCodeGenerator_So8CIFilterCXcvp":{"name":"filter","abstract":"<p>Filter for drawing the QR code. Built-in function.</p>","parent_name":"QRView"},"Structs/QRView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"QRView"},"Structs/QRView.html#/s:13bluetoothChat6QRViewV14generateQRCode4fromSo7UIImageCSS_tF":{"name":"generateQRCode(from:)","abstract":"<p>Generates a QR code given some string as an input.</p>","parent_name":"QRView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV7contextSo22NSManagedObjectContextCvp":{"name":"context","abstract":"<p>Context of the <code>CoreData</code> for persistent storage.</p>","parent_name":"HomeView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV9chatBrainAA0bF0Cvp":{"name":"chatBrain","abstract":"<p>Initialize the ChatBrain which handles logic of Bluetooth","parent_name":"HomeView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV13conversations7SwiftUI14FetchedResultsVyAA18ConversationEntityCGvp":{"name":"conversations","abstract":"<p>Get conversations saved to Core Data</p>","parent_name":"HomeView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV17confirmationShownSbvp":{"name":"confirmationShown","abstract":"<p>Used for confirmation dialog when deleting a contact.</p>","parent_name":"HomeView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV4bodyQrvp":{"name":"body","abstract":"<p>The actual body of the HomeView.</p>","parent_name":"HomeView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV13getSafeAuthor12conversationSSAA18ConversationEntityC_tF":{"name":"getSafeAuthor(conversation:)","abstract":"<p>As usernames gets a random 4 digit number added to them, which we do not want","parent_name":"HomeView"},"Structs/HomeView.html#/s:13bluetoothChat8HomeViewV20conversationsIsEmptySbyF":{"name":"conversationsIsEmpty()","abstract":"<p>Checks if a conversation has no sent messages.</p>","parent_name":"HomeView"},"Structs/ConnectionView.html#/s:13bluetoothChat14ConnectionViewV0A7ManagerAA0B5BrainCvp":{"name":"bluetoothManager","abstract":"<p>Undocumented</p>","parent_name":"ConnectionView"},"Structs/ConnectionView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ConnectionView"},"Structs/MessageStatus.html#/s:13bluetoothChat13MessageStatusV7messageAA0C6EntityCvp":{"name":"message","abstract":"<p>The message entity to add a status image to.</p>","parent_name":"MessageStatus"},"Structs/MessageStatus.html#/s:13bluetoothChat13MessageStatusV07messageD4Enum0E0AA0D0OAA0C6EntityC_tF":{"name":"messageStatusEnum(message:)","abstract":"<p>Get the <code>enum</code> status type of a message.</p>","parent_name":"MessageStatus"},"Structs/MessageStatus.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"MessageStatus"},"Structs/MessageBubble.html#/s:13bluetoothChat13MessageBubbleV8usernameSSvp":{"name":"username","abstract":"<p>The username of the person who sent a message.</p>","parent_name":"MessageBubble"},"Structs/MessageBubble.html#/s:13bluetoothChat13MessageBubbleV7messageAA0C6EntityCvp":{"name":"message","abstract":"<p>The message which was sent or received.</p>","parent_name":"MessageBubble"},"Structs/MessageBubble.html#/s:13bluetoothChat13MessageBubbleV13dateFormatterSo06NSDateF0Cvp":{"name":"dateFormatter","abstract":"<p>Undocumented</p>","parent_name":"MessageBubble"},"Structs/MessageBubble.html#/s:13bluetoothChat13MessageBubbleV8username7messageACSS_AA0C6EntityCtcfc":{"name":"init(username:message:)","abstract":"<p>Initialise a new chat bubble.</p>","parent_name":"MessageBubble"},"Structs/MessageBubble.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"MessageBubble"},"Structs/Bubble.html#/s:13bluetoothChat6BubbleV4chatSbvp":{"name":"chat","abstract":"<p>A boolean confirming that the message is sent by us or not.</p>","parent_name":"Bubble"},"Structs/Bubble.html#/s:13bluetoothChat6BubbleV4path2in7SwiftUI4PathVSo6CGRectV_tF":{"name":"path(in:)","abstract":"<p>Drawing of the actual path.</p>","parent_name":"Bubble"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV7contextSo22NSManagedObjectContextCvp":{"name":"context","abstract":"<p>The <code>CoreData</code> object context to which we save messages to persistent storage.</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV11colorScheme7SwiftUI05ColorE0Ovp":{"name":"colorScheme","abstract":"<p>The users current colorscheme for pretty visuals.</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV9chatBrainAA0bE0Cvp":{"name":"chatBrain","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChatBrain.html\">ChatBrain</a></code> object is used to send and receive messages.","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV12conversationAA18ConversationEntityCvp":{"name":"conversation","abstract":"<p>The current conversation that the user is in.</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV8messages7SwiftUI14FetchedResultsVyAA13MessageEntityCGvp":{"name":"messages","abstract":"<p>Fetched results of the messages for this conversation.</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV7messageSSvp":{"name":"message","abstract":"<p>Temporary storage of the textfield entry.</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV18showingReportAlertSbvp":{"name":"showingReportAlert","abstract":"<p>A boolean for showing the report alert or not. Showed if we press","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV8usernameSSvp":{"name":"username","abstract":"<p>Our username for comparisons to the username of the conversation.</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:13bluetoothChat0B4ViewV12conversationAcA18ConversationEntityC_tcfc":{"name":"init(conversation:)","abstract":"<p>Undocumented</p>","parent_name":"ChatView"},"Structs/ChatView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ChatView"},"Structs/Service.html#/s:13bluetoothChat7ServiceV10deviceNameSSvp":{"name":"deviceName","abstract":"<p>Undocumented</p>","parent_name":"Service"},"Structs/Service.html#/s:13bluetoothChat7ServiceV4UUIDSo6CBUUIDCvp":{"name":"UUID","abstract":"<p>The UUID uniqely verifies this app as to make sure that we do not","parent_name":"Service"},"Structs/Service.html#/s:13bluetoothChat7ServiceV8charUUIDSo6CBUUIDCvp":{"name":"charUUID","abstract":"<p>The unique UUID of the characteristic (the chat functionality part)</p>","parent_name":"Service"},"Structs/Message.html#/s:13bluetoothChat7MessageV2ids5Int32Vvp":{"name":"id","abstract":"<p>Some id which uniquely identifies the message.</p>","parent_name":"Message"},"Structs/Message.html#/s:13bluetoothChat7MessageV4typeSivp":{"name":"type","abstract":"<p>Some type of message.","parent_name":"Message"},"Structs/Message.html#/s:13bluetoothChat7MessageV6senderSSvp":{"name":"sender","abstract":"<p>The author who wrote the message.</p>","parent_name":"Message"},"Structs/Message.html#/s:13bluetoothChat7MessageV8receiverSSvp":{"name":"receiver","abstract":"<p>Who the message is meant for</p>","parent_name":"Message"},"Structs/Message.html#/s:13bluetoothChat7MessageV4textSSvp":{"name":"text","abstract":"<p>The actual content of the message.</p>","parent_name":"Message"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV2ids5Int32Vvp":{"name":"id","abstract":"<p>Some id which uniquely identifies the message.</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV6senderSSvp":{"name":"sender","abstract":"<p>The author who wrote the message.</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV8receiverSSvp":{"name":"receiver","abstract":"<p>Who the message is meant for</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV4textSSvp":{"name":"text","abstract":"<p>The actual content of the message.</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV4date10Foundation4DateVvp":{"name":"date","abstract":"<p>The time of receival</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV6statusAA6StatusOvp":{"name":"status","abstract":"<p>The current status of the message.</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV16messageDeliveredyyF":{"name":"messageDelivered()","abstract":"<p>Change message status to delivered</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV11messageReadyyF":{"name":"messageRead()","abstract":"<p>Change message status to read</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV13messageFailedyyF":{"name":"messageFailed()","abstract":"<p>Change message status to failed</p>","parent_name":"LocalMessage"},"Structs/LocalMessage.html#/s:13bluetoothChat12LocalMessageV23messageReceivedReadSentyyF":{"name":"messageReceivedReadSent()","abstract":"<p>Change message status to received-read-sent.</p>","parent_name":"LocalMessage"},"Structs/Device.html#/s:13bluetoothChat6DeviceV4uuidSSvp":{"name":"uuid","abstract":"<p>The unique identifier of a new Bluetooth connection.</p>","parent_name":"Device"},"Structs/Device.html#/s:13bluetoothChat6DeviceV4rssiSivp":{"name":"rssi","abstract":"<p>RSSI is the signal strength to a device. The closer to 0 the better.</p>","parent_name":"Device"},"Structs/Device.html#/s:13bluetoothChat6DeviceV4nameSSvp":{"name":"name","abstract":"<p>The name of a device if it is broadcasting one.</p>","parent_name":"Device"},"Structs/Device.html#/s:13bluetoothChat6DeviceV10peripheralSo12CBPeripheralCvp":{"name":"peripheral","abstract":"<p>The actual reference to the device as a <code>CBPeripheral</code>.</p>","parent_name":"Device"},"Structs/Device.html#/s:13bluetoothChat6DeviceV10updateRSSI0E0ySi_tF":{"name":"updateRSSI(RSSI:)","abstract":"<p>Updated the RSSI when a device has its connection refreshed.</p>","parent_name":"Device"},"Structs/Conversation.html#/s:13bluetoothChat12ConversationV2ids5Int32Vvp":{"name":"id","abstract":"<p>An unique identifier for the conversation</p>","parent_name":"Conversation"},"Structs/Conversation.html#/s:13bluetoothChat12ConversationV6authorSSvp":{"name":"author","abstract":"<p>The author - or the username of the person who is not you.</p>","parent_name":"Conversation"},"Structs/Conversation.html#/s:13bluetoothChat12ConversationV11lastMessageAA05LocalE0Vvp":{"name":"lastMessage","abstract":"<p>The last message sent in the conversation. This includes yours and the authors last message.</p>","parent_name":"Conversation"},"Structs/Conversation.html#/s:13bluetoothChat12ConversationV8messagesSayAA12LocalMessageVGvp":{"name":"messages","abstract":"<p>A list of all messages sent in the conversation.</p>","parent_name":"Conversation"},"Structs/Conversation.html#/s:13bluetoothChat12ConversationV10addMessage0D0yAA05LocalE0V_tF":{"name":"addMessage(add:)","abstract":"<p>Add a message to the end of a conversation thread.</p>","parent_name":"Conversation"},"Structs/Conversation.html#/s:13bluetoothChat12ConversationV17updateLastMessage3newyAA05LocalF0V_tF":{"name":"updateLastMessage(new:)","abstract":"<p>Update the last message in the thread.</p>","parent_name":"Conversation"},"Structs/Conversation.html":{"name":"Conversation","abstract":"<p>A conversation is a thread of messages with some user that you have added.</p>"},"Structs/Device.html":{"name":"Device","abstract":"<p>A device is created when a new Bluetooth connection is made.</p>"},"Structs/LocalMessage.html":{"name":"LocalMessage","abstract":"<p>Local messages are messages meant to be stored on device.</p>"},"Structs/Message.html":{"name":"Message","abstract":"<p>Message objects are the objects sent between devices.</p>"},"Structs/Service.html":{"name":"Service","abstract":"<p>The Service struct keeps information that we may need across"},"Structs/ChatView.html":{"name":"ChatView","abstract":"<p>The <code>ChatView</code> displays a conversation and all the messages that have been sent and"},"Structs/Bubble.html":{"name":"Bubble","abstract":"<p>A simple shape of a bubbble.</p>"},"Structs/MessageBubble.html":{"name":"MessageBubble","abstract":"<p>The beautiful bubbles messages are displayed in.</p>"},"Structs/MessageStatus.html":{"name":"MessageStatus","abstract":"<p>The small status image of a message. An eye for example means that the"},"Structs/ConnectionView.html":{"name":"ConnectionView","abstract":"<p>Undocumented</p>"},"Structs/HomeView.html":{"name":"HomeView","abstract":"<p>The <code>HomeView</code> where users are presented with the different conversations that they are in."},"Structs/QRView.html":{"name":"QRView","abstract":"<p>The <code>QRView</code> gets the users public key in a string format,"},"Structs/SetUpView.html":{"name":"SetUpView","abstract":"<p>SetUpView handles all initial first logins where users choose a username"},"Structs/AboutView.html":{"name":"AboutView","abstract":"<p>The <code>About</code> section in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SettingsView.html\">SettingsView</a></code>."},"Structs/ConnectivityView.html":{"name":"ConnectivityView","abstract":"<p>The connectivityView is used for showing the user current connections.</p>"},"Structs/ReadToggle.html":{"name":"ReadToggle","abstract":"<p>The <code>READ</code> setting toggle which is a setting that"},"Structs/SettingsView.html":{"name":"SettingsView","abstract":"<p>The main <code>SettingsView</code> which shows a number of subviews for different purposes.</p>"},"Structs/SupportView.html":{"name":"SupportView","abstract":"<p>The support view which contains contact information for dIM.</p>"},"Extensions/Color.html#/s:7SwiftUI5ColorV13bluetoothChatE3hex5alphaACSu_Sdtcfc":{"name":"init(hex:alpha:)","abstract":"<p>Extension on color which automatically converts a HEX color code","parent_name":"Color"},"Extensions/UIApplication.html#/s:So13UIApplicationC13bluetoothChatE10endEditingyyF":{"name":"endEditing()","abstract":"<p>Called on a textfield to dismiss the keyboard when the user","parent_name":"UIApplication"},"Extensions/UIApplication.html":{"name":"UIApplication"},"Extensions/Color.html":{"name":"Color"},"Enums/Status.html#/s:13bluetoothChat6StatusO4sentyA2CmF":{"name":"sent","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:13bluetoothChat6StatusO9deliveredyA2CmF":{"name":"delivered","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:13bluetoothChat6StatusO4readyA2CmF":{"name":"read","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:13bluetoothChat6StatusO8receivedyA2CmF":{"name":"received","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:13bluetoothChat6StatusO16receivedReadSentyA2CmF":{"name":"receivedReadSent","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:13bluetoothChat6StatusO7unknownyA2CmF":{"name":"unknown","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:13bluetoothChat6StatusO6failedyA2CmF":{"name":"failed","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html":{"name":"Status","abstract":"<p>An enum used to represent the status of a message locally."},"Global%20Variables.html#/s:13bluetoothChat18enableMessageQueueSbvp":{"name":"enableMessageQueue","abstract":"<p>Enable the message queue, which is the feature that allows your messages"},"Global%20Variables.html#/s:13bluetoothChat15useDSRAlgorithmSbvp":{"name":"useDSRAlgorithm","abstract":"<p>Use Dynamic Source Routing algorithm for routing ACK messages."},"Classes/MessageEntity.html#/s:13bluetoothChat13MessageEntityC12fetchRequestSo07NSFetchF0CyACGyFZ":{"name":"fetchRequest()","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/c:@CM@bluetoothChat@objc(cs)MessageEntity(py)date":{"name":"date","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/s:s12IdentifiableP2id2IDQzvp":{"name":"id","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/c:@CM@bluetoothChat@objc(cs)MessageEntity(py)receiver":{"name":"receiver","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/c:@CM@bluetoothChat@objc(cs)MessageEntity(py)sender":{"name":"sender","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/c:@CM@bluetoothChat@objc(cs)MessageEntity(py)status":{"name":"status","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/c:@CM@bluetoothChat@objc(cs)MessageEntity(py)text":{"name":"text","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/MessageEntity.html#/c:@CM@bluetoothChat@objc(cs)MessageEntity(py)inConversation":{"name":"inConversation","abstract":"<p>Undocumented</p>","parent_name":"MessageEntity"},"Classes/ConversationEntity.html#/s:13bluetoothChat18ConversationEntityC12fetchRequestSo07NSFetchF0CyACGyFZ":{"name":"fetchRequest()","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(py)author":{"name":"author","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(py)lastMessage":{"name":"lastMessage","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(py)publicKey":{"name":"publicKey","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(py)messages":{"name":"messages","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(im)addMessagesObject:":{"name":"addToMessages(_:)","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(im)removeMessagesObject:":{"name":"removeFromMessages(_:)","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(im)addMessages:":{"name":"addToMessages(_:)","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/ConversationEntity.html#/c:@CM@bluetoothChat@objc(cs)ConversationEntity(im)removeMessages:":{"name":"removeFromMessages(_:)","abstract":"<p>Undocumented</p>","parent_name":"ConversationEntity"},"Classes/EmailHelper.html#/s:13bluetoothChat11EmailHelperC6sharedACvpZ":{"name":"shared","abstract":"<p>The EmailHelper static object.</p>","parent_name":"EmailHelper"},"Classes/EmailHelper.html#/s:13bluetoothChat11EmailHelperC04sendC07subject4body2toSbSS_S2StF":{"name":"sendEmail(subject:body:to:)","abstract":"<p>Send an email by using the built in email app in iOS.</p>","parent_name":"EmailHelper"},"Classes/EmailHelper.html#/c:@M@bluetoothChat@objc(cs)EmailHelper(im)mailComposeController:didFinishWithResult:error:":{"name":"mailComposeController(_:didFinishWith:error:)","abstract":"<p>Undocumented</p>","parent_name":"EmailHelper"},"Classes/EmailHelper.html#/s:13bluetoothChat11EmailHelperC21getRootViewControllerSo06UIViewH0CSgyFZ":{"name":"getRootViewController()","abstract":"<p>Undocumented</p>","parent_name":"EmailHelper"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(py)window":{"name":"window","abstract":"<p>Undocumented</p>","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)scene:openURLContexts:":{"name":"scene(_:openURLContexts:)","abstract":"<p>openURLContexts handles deep links for the app. They allow users to easily share","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)scene:willConnectToSession:options:":{"name":"scene(_:willConnectTo:options:)","abstract":"<p>Set up the scene and connect it to our <code>SetupView</code>.</p>","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)sceneDidDisconnect:":{"name":"sceneDidDisconnect(_:)","abstract":"<p>Not used but must be supported according to the protocol.</p>","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)sceneDidBecomeActive:":{"name":"sceneDidBecomeActive(_:)","abstract":"<p>Not used but must be supported according to the protocol.</p>","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)sceneWillResignActive:":{"name":"sceneWillResignActive(_:)","abstract":"<p>Not used but must be supported according to the protocol.</p>","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)sceneWillEnterForeground:":{"name":"sceneWillEnterForeground(_:)","abstract":"<p>Not used but must be supported according to the protocol.</p>","parent_name":"SceneDelegate"},"Classes/SceneDelegate.html#/c:@M@bluetoothChat@objc(cs)SceneDelegate(im)sceneDidEnterBackground:":{"name":"sceneDidEnterBackground(_:)","abstract":"<p>Saves the current context to <code>CoreData</code> if the app is backgrounded (the user returns to the homescreen.).</p>","parent_name":"SceneDelegate"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC12getPublicKeySSyF":{"name":"getPublicKey()","abstract":"<p>Gets your public key for generation of the QR code.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC13getPrivateKey0C3Kit4P256O0G9AgreementO0fG0VyF":{"name":"getPrivateKey()","abstract":"<p>Returns your private key which is saved as a string in <code>UserDefaults</code>.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC18generatePrivateKey0C3Kit4P256O0G9AgreementO0fG0VyF":{"name":"generatePrivateKey()","abstract":"<p>Generate a new private key for you.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC16exportPrivateKeyySS0C3Kit4P256O0G9AgreementO0fG0VF":{"name":"exportPrivateKey(_:)","abstract":"<p>Converts a private key object into a string since objects cannot be","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC15exportPublicKeyySS0C3Kit4P256O0G9AgreementO0fG0VF":{"name":"exportPublicKey(_:)","abstract":"<p>Converts a public key object into a string since objects cannot be","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC16importPrivateKeyy0C3Kit4P256O0G9AgreementO0fG0VSSKF":{"name":"importPrivateKey(_:)","abstract":"<p>Convert a private key string into a private key object.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC15importPublicKeyy0C3Kit4P256O0G9AgreementO0fG0VSSKF":{"name":"importPublicKey(_:)","abstract":"<p>Convert a public key string into a public key object.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC18deriveSymmetricKey07privateG006publicG00C3Kit0fG0VAG4P256O0G9AgreementO07PrivateG0V_AM06PublicG0VtKF":{"name":"deriveSymmetricKey(privateKey:publicKey:)","abstract":"<p>Derive the symmetric key to use for encryption.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC14encryptMessage4text12symmetricKeyS2S_0C3Kit09SymmetricI0VtKF":{"name":"encryptMessage(text:symmetricKey:)","abstract":"<p>Encrypt a string given a symmetric key.</p>","parent_name":"CryptoHandler"},"Classes/CryptoHandler.html#/s:13bluetoothChat13CryptoHandlerC14decryptMessage4text12symmetricKeyS2S_0C3Kit09SymmetricI0VtF":{"name":"decryptMessage(text:symmetricKey:)","abstract":"<p>Decrypt a message that you have received.</p>","parent_name":"CryptoHandler"},"Classes/ChatBrain/queuedMessage.html#/s:13bluetoothChat0B5BrainC13queuedMessageV7messageAA0E0Vvp":{"name":"message","abstract":"<p>Undocumented</p>","parent_name":"queuedMessage"},"Classes/ChatBrain/queuedMessage.html#/s:13bluetoothChat0B5BrainC13queuedMessageV4date10Foundation4DateVvp":{"name":"date","abstract":"<p>Undocumented</p>","parent_name":"queuedMessage"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC7contextSo22NSManagedObjectContextCvp":{"name":"context","abstract":"<p>Context for CoreData storage</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC13routedCounterSivp":{"name":"routedCounter","abstract":"<p>A simple counter to show amount of relayed messages this session.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC12messageQueueSayAC13queuedMessageVGvp":{"name":"messageQueue","abstract":"<p>Holds an array of messages to be delivered at a later point.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC17discoveredDevicesSayAA6DeviceVGvp":{"name":"discoveredDevices","abstract":"<p>Holds a reference to all devices discovered. If no reference","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC23connectedCharateristicsSaySo16CBCharacteristicCGvp":{"name":"connectedCharateristics","abstract":"<p>Holds the connected characteristics. This is only used for the chat","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC14centralManagerSo09CBCentralE0CSgvp":{"name":"centralManager","abstract":"<p>The centralManager acts as our Bluetooth server and receives messages","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC17peripheralManagerSo012CBPeripheralE0CSgvp":{"name":"peripheralManager","abstract":"<p>The peripheralManager acts as our Bluetooth clients and establishes","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC14characteristicSo23CBMutableCharacteristicCSgvp":{"name":"characteristic","abstract":"<p>The characteristic which defines our chat functionality for the","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC12seenMessagesSays5Int32VGvp":{"name":"seenMessages","abstract":"<p>A list which holds message IDs which we have seen before.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC18peripheralMessagesSDySSSay10Foundation4DateVGGvp":{"name":"peripheralMessages","abstract":"<p>A dictionary which stores how many messages we have received from a connected peripheral.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC17senderOfMessageIDSDys5Int32VSSGvp":{"name":"senderOfMessageID","abstract":"<p>A dictionary which holds the ids of messages relayed and the corresponding sender","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC13seenCBCentralSaySo0E0CGvp":{"name":"seenCBCentral","abstract":"<p>Seen CBCentrals / This is used for DSR algorithm.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC7contextACSo22NSManagedObjectContextC_tcfc":{"name":"init(context:)","abstract":"<p>The initialiser for the ChatBrain.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC17cleanUpPeripheralyySo12CBPeripheralCF":{"name":"cleanUpPeripheral(_:)","abstract":"<p>Remove a device from discoveredDevices and drop connection to it.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)centralManagerDidUpdateState:":{"name":"centralManagerDidUpdateState(_:)","abstract":"<p>Callback function which gets the Bluetooth state of this device.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)centralManager:didDiscoverPeripheral:advertisementData:RSSI:":{"name":"centralManager(_:didDiscover:advertisementData:rssi:)","abstract":"<p>Callback function which is activated if a peripheral is discovered.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)centralManager:didConnectPeripheral:":{"name":"centralManager(_:didConnect:)","abstract":"<p>Callback function if the central manager connected successfully to the peripheral.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)centralManager:didFailToConnectPeripheral:error:":{"name":"centralManager(_:didFailToConnect:error:)","abstract":"<p>Callback function if we fail to connect to some peripheral.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)centralManager:didDisconnectPeripheral:error:":{"name":"centralManager(_:didDisconnectPeripheral:error:)","abstract":"<p>Callback function called when we lose connection to a peripheral.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheral:didReadRSSI:error:":{"name":"peripheral(_:didReadRSSI:error:)","abstract":"<p>Callback function whenever a peripheral updates its RSSI.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheral:didDiscoverServices:":{"name":"peripheral(_:didDiscoverServices:)","abstract":"<p>Callback function if we discover the dIM UUID on a peripheral device.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheral:didDiscoverCharacteristicsForService:error:":{"name":"peripheral(_:didDiscoverCharacteristicsFor:error:)","abstract":"<p>Callback function if we discover the characteristic which defines the chat functionality.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheral:didUpdateNotificationStateForCharacteristic:error:":{"name":"peripheral(_:didUpdateNotificationStateFor:error:)","abstract":"<p>Callback function which does error handling if we receive the wrong notifications.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheral:didUpdateValueForCharacteristic:error:":{"name":"peripheral(_:didUpdateValueFor:error:)","abstract":"<p>Callback function which is called whenever we receive a new message.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheral:didModifyServices:":{"name":"peripheral(_:didModifyServices:)","abstract":"<p>Callback function if a peripheral modifies its services. This is not allowed","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC16startAdvertising17peripheralManagerySo012CBPeripheralG0C_tF":{"name":"startAdvertising(peripheralManager:)","abstract":"<p>Start advertisting that we are here to nearby Bluetooth central managers.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheralManagerDidUpdateState:":{"name":"peripheralManagerDidUpdateState(_:)","abstract":"<p>Callback function which is called when the peripheral manager updates its state.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheralManager:central:didSubscribeToCharacteristic:":{"name":"peripheralManager(_:central:didSubscribeTo:)","abstract":"<p>Called when a new central subscribes to our peripheral manager.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/c:@CM@bluetoothChat@objc(cs)ChatBrain(im)peripheralManager:central:didUnsubscribeFromCharacteristic:":{"name":"peripheralManager(_:central:didUnsubscribeFrom:)","abstract":"<p>Callback function activated when a central unsubscribes from us.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC20addMessageToDSRTable9messageID0aI0ys5Int32V_SStF":{"name":"addMessageToDSRTable(messageID:bluetoothID:)","abstract":"<p>Add a message to the dicitionary when it is received.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC22checkMessageSeenBefore9messageIDSbs5Int32V_tF":{"name":"checkMessageSeenBefore(messageID:)","abstract":"<p>Check if we have seen a message before. If we have not we will","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC18getSenderOfMessage9messageIDSSs5Int32V_tF":{"name":"getSenderOfMessage(messageID:)","abstract":"<p>Get the sender of a message given a message id.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain/queuedMessage.html":{"name":"queuedMessage","abstract":"<p>A message stored together with a date for queue.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC15messageQueueAddyyAA7MessageVF":{"name":"messageQueueAdd(_:)","abstract":"<p>Add a message to the message queue.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC17checkMessageQueueyyF":{"name":"checkMessageQueue()","abstract":"<p>Remove old messages from the message queue such that","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC25messageQueueNewConnectionyySo9CBCentralCF":{"name":"messageQueueNewConnection(_:)","abstract":"<p>Called when we establish a new connection to a central manager.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC12relayMessageyyAA0E0VF":{"name":"relayMessage(_:)","abstract":"<p>Relay a message which we have received and is not for us.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC12relayMessageyyAA0E0V_SStF":{"name":"relayMessage(_:_:)","abstract":"<p>Relay message but to be used for <code>DSR</code> routing.","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC15retrieveMessageyyAA0E0VF":{"name":"retrieveMessage(_:)","abstract":"<p>Retrieve a message from a sender and handle it accordingly.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC12receivedRead7message12conversationSbAA7MessageV_AA18ConversationEntityCtF":{"name":"receivedRead(message:conversation:)","abstract":"<p>Called if we have received a <code>READ</code> message type. This is to handle","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC11receivedAck7message12conversationSbAA7MessageV_AA18ConversationEntityCtF":{"name":"receivedAck(message:conversation:)","abstract":"<p>Handles <code>ACK</code> message types. Also confirms that the message is correctly","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC31decryptRetrievedMessageToString7message12conversationSSSgAA0F0V_AA18ConversationEntityCtF":{"name":"decryptRetrievedMessageToString(message:conversation:)","abstract":"<p>A helper function to decrypt a message to a string.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC16sendNotification4whatyAA13MessageEntityC_tF":{"name":"sendNotification(what:)","abstract":"<p>Send a notification to the user if the app is closed and and we retrieve a message.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC11sendMessage3for4text7contextyAA18ConversationEntityC_SSSo22NSManagedObjectContextCtF":{"name":"sendMessage(for:text:context:)","abstract":"<p>Sends a message to a specific user.</p>","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC15sendReadMessageyyAA18ConversationEntityCF":{"name":"sendReadMessage(_:)","abstract":"<p>Sends a message of id&rsquo;s which confirms that we have read the","parent_name":"ChatBrain"},"Classes/ChatBrain.html#/s:13bluetoothChat0B5BrainC14sendAckMessageyyAA0F6EntityCF":{"name":"sendAckMessage(_:)","abstract":"<p>Sends an <code>ACK</code> message to confirm that we have received a message.","parent_name":"ChatBrain"},"Classes/AppDelegate.html#/c:@M@bluetoothChat@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:":{"name":"application(_:didFinishLaunchingWithOptions:)","abstract":"<p>Default function which is not in use but the <code>AppDelegate</code> must support.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@bluetoothChat@objc(cs)AppDelegate(im)application:configurationForConnectingSceneSession:options:":{"name":"application(_:configurationForConnecting:options:)","abstract":"<p>Default function which is not in use but the <code>AppDelegate</code> must support.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@bluetoothChat@objc(cs)AppDelegate(im)application:didDiscardSceneSessions:":{"name":"application(_:didDiscardSceneSessions:)","abstract":"<p>Default function which is not in use but the <code>AppDelegate</code> must support.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:13bluetoothChat11AppDelegateC19persistentContainerSo012NSPersistentF0Cvp":{"name":"persistentContainer","abstract":"<p>Get the persistent storage <code>CoreData</code> container.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:13bluetoothChat11AppDelegateC11saveContextyyF":{"name":"saveContext()","abstract":"<p>Saved to the <code>CoreData</code> container. A simple helper function used around the app.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>Default class generated by iOS apps. This is where apps and windows lifecycles are maintained.</p>"},"Classes/ChatBrain.html":{"name":"ChatBrain","abstract":"<p>The Bluetooth Manager handles all searching for, creating connection to"},"Classes/CryptoHandler.html":{"name":"CryptoHandler","abstract":"<p>Handles all encryption of messages as well as public and private keys.</p>"},"Classes/SceneDelegate.html":{"name":"SceneDelegate","abstract":"<p>Default class generated for iOS apps.</p>"},"Classes/EmailHelper.html":{"name":"EmailHelper","abstract":"<p>An email helper class which allows us to send emails in the support section of"},"Classes/ConversationEntity.html":{"name":"ConversationEntity","abstract":"<p>Undocumented</p>"},"Classes/MessageEntity.html":{"name":"MessageEntity","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}